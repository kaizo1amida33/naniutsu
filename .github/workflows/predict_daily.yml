name: Daily Prediction

on:
  schedule:
    - cron: "0 23 * * *"
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  predict:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas==2.2.2 numpy==1.26.4 scipy==1.11.4
          pip install scikit-learn==1.3.0 joblib==1.2.0
          pip install matplotlib seaborn
          pip install optuna

      - name: Run prediction
        run: |
          python workflow_predict_777_fixed.py --model_dir model_28/model_dir.joblib
          echo "=== Checking for all_predictions.csv ==="
          find . -name "all_predictions.csv" -ls
          echo "=== prediction_output contents ==="
          ls -la prediction_output/ || echo "Directory not found"

      - name: Save to predictions folder
        run: |
          echo "=== Creating predictions folder ==="
          mkdir -p predictions
          
          echo "=== Copying to dated file ==="
          cp predict_777.csv predictions/predict_$(date +%Y%m%d).csv
          
          echo "=== Verify files ==="
          ls -la predictions/
          cat predictions/predict_$(date +%Y%m%d).csv

      - name: Generate HTML
        run: |
          mkdir -p public
          python3 << 'EOF'
          import csv
          with open('predict_777.csv') as f:
              rows = list(csv.DictReader(f))
          html = '<!DOCTYPE html><html><head><meta charset="UTF-8"><title>K3</title><style>body{font-family:sans-serif;background:#667eea;padding:20px}.container{max-width:900px;margin:0 auto;background:white;border-radius:15px}header{background:#667eea;color:white;padding:30px;text-align:center}table{width:100%;border-collapse:collapse;margin:20px}th,td{padding:15px;border-bottom:1px solid #ddd}th{background:#667eea;color:white}.rank-1{background:#fff3cd;font-weight:bold}.rank-2{background:#d1ecf1}.rank-3{background:#d4edda}.download{text-align:center;padding:20px}a{display:inline-block;padding:10px 20px;background:#28a745;color:white;text-decoration:none;border-radius:5px}</style></head><body><div class="container"><header><h1>K3 Prediction</h1></header><div class="download"><a href="predict_777.csv">Download CSV</a></div><table><thead><tr>'
          for col in rows[0].keys():
              html += f'<th>{col}</th>'
          html += '</tr></thead><tbody>'
          for i, row in enumerate(rows, 1):
              html += f'<tr class="rank-{i if i<=3 else ""}">'
              for val in row.values():
                  html += f'<td>{val}</td>'
              html += '</tr>'
          html += '</tbody></table></div></body></html>'
          with open('public/index.html', 'w') as f:
              f.write(html)
          EOF

      - name: Copy CSV
        run: cp predict_777.csv public/

      - uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - uses: actions/deploy-pages@v4
        id: deployment

      - name: Commit results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          
          echo "=== Git add ==="
          git add predict_777.csv predictions/
          
          echo "=== Git status ==="
          git status
          
          echo "=== Git commit ==="
          git commit -m "Update prediction $(date +%Y-%m-%d)"
          
          echo "=== Git push ==="
          git push
