name: Daily Prediction and GitHub Pages

on:
  schedule:
    - cron: "0 23 * * *"
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  predict-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas==2.2.2 numpy==1.26.4 scipy==1.11.4
          pip install scikit-learn==1.3.0 joblib==1.2.0

      - name: Check data
        run: ls -lh *_v14.csv 2>/dev/null || echo "No data"

      - name: Run prediction
        run: |
          if [ -f closed_days.txt ]; then
            python workflow_predict_777_fixed.py --model_dir model_28/model_dir.joblib --closed closed_days.txt --warmup_days 14
          else
            python workflow_predict_777_fixed.py --model_dir model_28/model_dir.joblib --warmup_days 14
          fi

      - name: Verify output
        run: |
          test -f predict_777.csv || exit 1
          cat predict_777.csv

      - name: Generate HTML
        run: |
          mkdir -p public
          python3 << 'PYSCRIPT'
          import csv
          
          with open('predict_777.csv', 'r') as f:
              reader = csv.DictReader(f)
              rows = list(reader)
          
          html = '''<!DOCTYPE html>
          <html lang="ja">
          <head>
            <meta charset="UTF-8">
            <title>K3 Prediction</title>
            <style>
              body { font-family: sans-serif; background: linear-gradient(135deg, #667eea, #764ba2); padding: 20px; }
              .container { max-width: 900px; margin: 0 auto; background: white; border-radius: 15px; overflow: hidden; }
              header { background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 30px; text-align: center; }
              table { width: 100%; border-collapse: collapse; margin: 20px; }
              th, td { padding: 15px; border-bottom: 1px solid #ddd; }
              th { background: #667eea; color: white; }
              .rank-1 { background: #fff3cd; font-weight: bold; }
              .rank-2 { background: #d1ecf1; }
              .rank-3 { background: #d4edda; }
              .download { text-align: center; padding: 20px; }
              a { display: inline-block; padding: 10px 20px; background: #28a745; color: white; text-decoration: none; border-radius: 5px; }
            </style>
          </head>
          <body>
            <div class="container">
              <header><h1>K3 Prediction Results</h1></header>
              <div class="download"><a href="predict_777.csv">Download CSV</a></div>
              <table>
                <thead><tr>'''
          
          if rows:
              for col in rows[0].keys():
                  html += f'<th>{col}</th>'
              html += '</tr></thead><tbody>'
              
              for i, row in enumerate(rows, 1):
                  rank_class = f'rank-{i}' if i <= 3 else ''
                  html += f'<tr class="{rank_class}">'
                  for val in row.values():
                      html += f'<td>{val}</td>'
                  html += '</tr>'
          
          html += '</tbody></table></div></body></html>'
          
          with open('public/index.html', 'w', encoding='utf-8') as f:
              f.write(html)
          PYSCRIPT

      - name: Copy CSV
        run: cp predict_777.csv public/

      - name: Upload Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Commit results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          mkdir -p predictions
          cp predict_777.csv predictions/predict_$(date +%Y%m%d).csv
          git add predictions/ || true
          git commit -m "Update prediction" || true
          git push || true
